<?xml version="1.0"?>

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->

<document>

    <properties>
        <title>FormTool</title>
        <author email="sidler@apache.org">Gabriel Sidler</author>
        <projectfile>xdocs/struts/menu.xml</projectfile>

    </properties>

    <body>

    <section name="FormTool Reference Documentation">

        <p>Struts has support to parse incoming HTTP requests and populate a Java bean
        with the submitted request parameters. The same Java bean is used to populate
        forms with initial values. Additionally, a hook allows the application developer
        to include automatic form validation code.</p>

        <p>FormTool provides miscellaneous methods to work with forms and form bean in
        the context of Struts applications.</p>

        <toolinfo>
            <version>@@@version@@@, @@@date@@@</version>
            <clazz>org.apache.velocity.tools.struts.FormTool</clazz>
            <name>$form</name>
            <author email="sidler@teamup.com">Gabriel Sidler</author>
            <config-example>&lt;tool&gt;
  &lt;key&gt;form&lt;/key&gt;
  &lt;scope&gt;request&lt;/scope&gt;
  &lt;class&gt;org.apache.velocity.tools.struts.FormTool&lt;/class&gt;
&lt;/tool&gt;</config-example>
        </toolinfo>

        <methods/>

        <see>The <a href="../javadoc/org/apache/velocity/tools/struts/FormTool.html">Javadoc</a> for more info.</see>

    </section>

    <section name="getBean()">
        <method name="getBean()">

            <abstract>
                Retrieve and return the form bean associated with this request.
            </abstract>

            <signature>
                ActionForm getBean()
            </signature>

            <returns>
                The <code>ActionForm</code> associated with this request/session or
                <code>null</code> if there is no form bean associated with this mapping.
            </returns>

            <description>
                <p>This is a convenience method. The form bean is automatically
                available in the Velocity context under the name defined in the
                Struts configuration.</p>

                <p>If the form bean is used repeatedly, it is recommended to create a
                local variable referencing the bean rather than calling getBean()
                multiple times.</p>

<sourcecode>## Populating an input field with a default value
&lt;input type="text" name="username" value="$form.getBean().username"&gt;

## The same can be written as
&lt;input type="text" name="username" value="$form.bean.username"&gt;

## For repeated use create a local reference
#set ($defaults = $form.bean)
&lt;input type="text" name="username" value="$defaults.username"&gt;

## Accessing the form using the form name defined in struts-config.xml
## Velocity searches the request and session attributes for loginForm
&lt;input type="text" name="username" value="$loginForm.username"&gt;</sourcecode>
            </description>

        </method>
    </section>

    <section name="getCancelName()">
        <method name="getCancelName()">

            <abstract>
                Returns the query parameter name under which a cancel button press
                must be reported if form validation is to be skipped.
            </abstract>

            <signature>
                String getCancelName()
            </signature>

            <returns>
                The value of <code>org.apache.struts.taglib.html.Constants.CANCEL_PROPERTY</code>
            </returns>

            <description>
                <p>If a request contains a request parameter with key equal to the return value
                of this method, then automatic form validation is skipped. A typical application
                case is to use this magic string for the name attribute of a cancel button in a form.
                If this button is pressed, automatic form validation is skipped. If automatic form
                validation is not used, this magic string is irrelevant.</p>

<sourcecode>## A cancel button
&lt;input type="submit" name="$form.getCancelName()" value="Cancel"&gt;

## Can also be written as
&lt;input type="submit" name="$form.cancelName" value="Cancel"&gt;</sourcecode>

<p>This produces the following output:</p>

<sourcecode>&lt;input type="submit" name="org.apache.struts.taglib.html.CANCEL"
value="Cancel"&gt;</sourcecode>

            </description>

        </method>
    </section>

    <section name="getName()">
        <method name="getName()">

            <abstract>
                Returns the form bean name associated with this action mapping.
            </abstract>

            <signature>
                String getName()
            </signature>

            <returns>
                The name of the ActionForm associated with this request or
                <code>null</code> if there is no form bean associated with this mapping.
            </returns>

        </method>
    </section>

    <section name="getToken()">
        <method name="getToken()">

            <abstract>
                Retrieves and returns the transaction control token for this session.
            </abstract>

            <signature>
                String getToken()
            </signature>

            <returns>
                The token <code>String</code> or <code>null</code> if no token exists.
            </returns>

            <see>
                Method <a href="#getTokenName()"><code>getTokenName()</code></a> for examples.
            </see>

        </method>
    </section>

    <section name="getTokenName()">
        <method name="getTokenName()">

            <abstract>
                Returns the query parameter name under which a transaction token
                must be reported.
            </abstract>

            <signature>
                int getTokenName()
            </signature>

            <returns>
                The value of <code>org.apache.struts.taglib.html.Constants.TOKEN_KEY</code>
            </returns>

            <see>
                <a href="http://struts.apache.org/1.x/struts-core/apidocs/org/apache/struts/action/Action.html">
                JavaDoc of class <code>org.apache.struts.action.Action</code></a> for more information on the
                transaction token mechanism (I don't know of any better documentation of this Struts
                feature).
            </see>


            <description>
<sourcecode>## A hidden form field with the transaction token
&lt;input type="hidden" name="$form.getTokenName()"
value="$form.getToken()"&gt;

## Can also be written as
&lt;input type="hidden" name="$form.tokenName"
value="$form.token"&gt;</sourcecode>

<p>This produces output similar to:</p>

<sourcecode>&lt;input type="hidden" name="org.apache.struts.taglib.html.TOKEN"
value="84c29b4dea56ecf69524ef6b965c5e80"&gt;</sourcecode>
            </description>

        </method>
    </section>

 </body>
</document>
